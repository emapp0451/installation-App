{"ast":null,"code":"var _jsxFileName = \"/home/vikrant/Application/emApp/EmApp V1.1/react-bootstrap-emapp-master/src/components/filterd_component/Filterd.jsx\";\nimport React, { Component } from 'react';\nimport { Accordion, AccordionItem, AccordionItemHeading, AccordionItemPanel, AccordionItemButton } from 'react-accessible-accordion';\nimport { style } from 'components/about_component/About.css';\nexport default class Filterd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: [],\n      value: this.props.match.params.values.split(\"-\", 3),\n      hospitals: [],\n      colleges: []\n    };\n    console.log(props);\n  }\n\n  componentDidMount() {\n    if (this.state.value[1] == 'treatment') {\n      fetch('/test/findallHospitalAndArea?spec=' + this.state.value[2] + '&cityName=' + this.state.value[0]).then(res => res.json()).then(data => {\n        this.setState({\n          hospitals: data\n        });\n      }).catch(console.log);\n    }\n\n    if (this.state.value[1] == 'education') {\n      fetch('/test/findallCollegeAndArea?type=' + this.state.value[2] + '&cityName=' + this.state.value[0]).then(res => res.json()).then(data => {\n        this.setState({\n          colleges: data\n        });\n      }).catch(console.log);\n    }\n  }\n\n  render() {\n    let datas;\n\n    if (this.state.value[1] == 'treatment') {\n      datas = React.createElement(\"section\", {\n        className: \"bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 order-1 order-lg-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Hospitals in \", this.state.value[0], \" for \", this.state.value[2], \" treatment\"), React.createElement(Accordion, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.hospitals.map((us, index) => React.createElement(AccordionItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(AccordionItemHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(AccordionItemButton, {\n        className: \"p-3 mb-2 bg-info text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, us.hospitalName))), React.createElement(AccordionItemPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Address: \"), React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, us.address, \", contact: \", us.contact), React.createElement(\"h5\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"About Hospital: \"), React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, us.hospital_description), React.createElement(\"h5\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Locality: \"), React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, us.area_name), React.createElement(\"h6\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"About Locality: \"), React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, us.area_description), React.createElement(\"h6\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Market: \"), React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, us.market), React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Available Transports: \"), us.transportsAvailable)))))))));\n    }\n\n    if (this.state.value[1] == 'education') {\n      datas = React.createElement(\"section\", {\n        className: \"bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 order-1 order-lg-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Colleges in \", this.state.value[0], \" for \", this.state.value[2]), React.createElement(Accordion, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.colleges.map((us, index) => React.createElement(AccordionItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(AccordionItemHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(AccordionItemButton, {\n        className: \"p-3 mb-2 bg-info text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, us.collegeName))), React.createElement(AccordionItemPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Address: \"), React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, us.address), React.createElement(\"h5\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"About College: \"), React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, us.collegeDescription), React.createElement(\"h5\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Locality: \"), React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, us.area_name), React.createElement(\"h6\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"About Locality: \"), React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, us.description), React.createElement(\"h6\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Market: \"), React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, us.market), React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Available Transports: \"), us.transports_available)))))))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, datas);\n  }\n\n}","map":{"version":3,"sources":["/home/vikrant/Application/emApp/EmApp V1.1/react-bootstrap-emapp-master/src/components/filterd_component/Filterd.jsx"],"names":["React","Component","Accordion","AccordionItem","AccordionItemHeading","AccordionItemPanel","AccordionItemButton","style","Filterd","constructor","props","state","value","match","params","values","split","hospitals","colleges","console","log","componentDidMount","fetch","then","res","json","data","setState","catch","render","datas","map","us","index","hospitalName","address","contact","hospital_description","area_name","area_description","market","transportsAvailable","collegeName","collegeDescription","description","transports_available"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemPanel,\n    AccordionItemButton\n} from 'react-accessible-accordion';\nimport {style} from 'components/about_component/About.css'\nexport default class Filterd extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: [],\n            value: this.props.match.params.values.split(\"-\",3),\n            hospitals: [],\n            colleges: []\n        };\n        console.log(props);\n    }\n    componentDidMount () {\n        if(this.state.value[1]=='treatment'){\n        fetch('/test/findallHospitalAndArea?spec='+ this.state.value[2] + '&cityName=' + this.state.value[0])\n          .then(res => res.json())\n          .then((data) => {\n            this.setState({ hospitals: data })\n          })\n          .catch(console.log);\n        }\n        if(this.state.value[1]=='education'){\n            fetch('/test/findallCollegeAndArea?type='+ this.state.value[2] + '&cityName=' + this.state.value[0])\n              .then(res => res.json())\n              .then((data) => {\n                this.setState({ colleges: data })\n              })\n              .catch(console.log);\n            }\n        }\n    render(){\n        let datas;\n\n        if(this.state.value[1]=='treatment'){\n            datas =   <section className=\"bg-light\">\n                        <div className=\"container\">\n                        <div className=\"row\">\n                        <div className=\"col-lg-12 order-1 order-lg-1\">\n                        <h2>Hospitals in {this.state.value[0]} for {this.state.value[2]} treatment</h2>\n                    <Accordion>\n                    {this.state.hospitals.map((us, index) => (\n                           <AccordionItem> \n                               <AccordionItemHeading >\n                               <AccordionItemButton className=\"p-3 mb-2 bg-info text-white\">\n                               <h4 key={index}>{us.hospitalName}</h4>\n                                </AccordionItemButton>\n                               </AccordionItemHeading>\n                               <AccordionItemPanel>\n                                    <h5 className=\"text-primary\">Address: </h5>\n                                        <p key={index}>{us.address}, contact: {us.contact}</p>\n                                    <h5 className=\"text-primary\">About Hospital: </h5>\n\t\t\t\t\t\t\t\t\t    <p key={index}>{us.hospital_description}</p>\n                                    <h5 className=\"text-primary\">Locality: </h5>\n\t\t\t\t\t\t\t\t\t    <p key={index}>{us.area_name}</p>\n                                        <h6 className=\"text-success\">About Locality: </h6>\n                                            <p key={index}>{us.area_description}</p>\n                                            <h6 className=\"text-success\">Market: </h6>\n                                            <p key={index}>{us.market}</p>\n                                            <p key={index}><h6 className=\"text-success\">Available Transports: </h6>{us.transportsAvailable}</p>\n                                </AccordionItemPanel>\n                            </AccordionItem>\n                      ))}\n                    </Accordion>\n            \n        </div>\n        </div>\n        </div>\n        </section>\n        }\n        if(this.state.value[1]=='education'){\n            datas =   <section className=\"bg-light\">\n                        <div className=\"container\">\n                        <div className=\"row\">\n                        <div className=\"col-lg-12 order-1 order-lg-1\">\n                        <h2>Colleges in {this.state.value[0]} for {this.state.value[2]}</h2>\n           <Accordion>\n                    {this.state.colleges.map((us, index) => (\n                           <AccordionItem> \n                               <AccordionItemHeading >\n                               <AccordionItemButton className=\"p-3 mb-2 bg-info text-white\">\n                               <h6 key={index}>{us.collegeName}</h6>\n                                </AccordionItemButton>\n                               </AccordionItemHeading>\n                               <AccordionItemPanel>\n                               <h5 className=\"text-primary\">Address: </h5>\n                                        <p key={index}>{us.address}</p>\n                                    <h5 className=\"text-primary\">About College: </h5>\n\t\t\t\t\t\t\t\t\t    <p key={index}>{us.collegeDescription}</p>\n                                    <h5 className=\"text-primary\">Locality: </h5>\n\t\t\t\t\t\t\t\t\t    <p key={index}>{us.area_name}</p>\n                                        <h6 className=\"text-success\">About Locality: </h6>\n                                            <p key={index}>{us.description}</p>\n                                            <h6 className=\"text-success\">Market: </h6>\n                                            <p key={index}>{us.market}</p>\n                                            <p key={index}><h6 className=\"text-success\">Available Transports: </h6>{us.transports_available}</p>\n                                </AccordionItemPanel>\n                            </AccordionItem>\n                      ))}\n                    </Accordion>\n                </div>\n                </div>\n                </div>\n                </section>\n        }\n        return(\n            <div>\n                   {datas}\n                </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}